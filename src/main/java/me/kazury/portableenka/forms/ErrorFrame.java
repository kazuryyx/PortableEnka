package me.kazury.portableenka.forms;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class ErrorFrame extends JFrame {
    public JPanel mainPanel;
    public JButton quitButton;
    public JLabel infoText;
    public JLabel titleText;

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        mainPanel.setMinimumSize(new Dimension(550, 240));
        mainPanel.setPreferredSize(new Dimension(550, 240));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.setPreferredSize(new Dimension(490, 75));
        mainPanel.add(panel1);
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(0);
        label1.setIcon(new ImageIcon(getClass().getResource("/block2.png")));
        label1.setPreferredSize(new Dimension(55, 65));
        label1.setText("");
        panel1.add(label1);
        titleText = new JLabel();
        titleText.setFocusable(true);
        Font titleTextFont = this.$$$getFont$$$("Cooper Black", -1, 26, titleText.getFont());
        if (titleTextFont != null) titleText.setFont(titleTextFont);
        titleText.setForeground(new Color(-40607));
        titleText.setHorizontalAlignment(0);
        titleText.setPreferredSize(new Dimension(275, 50));
        titleText.setText("UID is not valid");
        panel1.add(titleText);
        final JLabel label2 = new JLabel();
        label2.setHorizontalAlignment(0);
        label2.setHorizontalTextPosition(0);
        label2.setIcon(new ImageIcon(getClass().getResource("/block2.png")));
        label2.setPreferredSize(new Dimension(55, 65));
        label2.setRequestFocusEnabled(true);
        label2.setText("");
        panel1.add(label2);
        infoText = new JLabel();
        infoText.setAutoscrolls(false);
        infoText.setDoubleBuffered(false);
        infoText.setEnabled(true);
        infoText.setFocusCycleRoot(false);
        infoText.setFocusTraversalPolicyProvider(false);
        infoText.setFocusable(true);
        Font infoTextFont = this.$$$getFont$$$("Segoe UI Black", -1, 16, infoText.getFont());
        if (infoTextFont != null) infoText.setFont(infoTextFont);
        infoText.setForeground(new Color(-1));
        infoText.setHorizontalAlignment(0);
        infoText.setInheritsPopupMenu(true);
        infoText.setOpaque(false);
        infoText.setPreferredSize(new Dimension(530, 50));
        infoText.setText("Not a valid UID, a UID is 9 characters long and has only numbers.");
        infoText.setVerifyInputWhenFocusTarget(true);
        infoText.setVisible(true);
        mainPanel.add(infoText);
        quitButton = new JButton();
        quitButton.setBackground(new Color(-13947600));
        Font quitButtonFont = this.$$$getFont$$$("Franklin Gothic Heavy", -1, 26, quitButton.getFont());
        if (quitButtonFont != null) quitButton.setFont(quitButtonFont);
        quitButton.setForeground(new Color(-1));
        quitButton.setOpaque(false);
        quitButton.setPreferredSize(new Dimension(300, 75));
        quitButton.setText("Okay");
        mainPanel.add(quitButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
